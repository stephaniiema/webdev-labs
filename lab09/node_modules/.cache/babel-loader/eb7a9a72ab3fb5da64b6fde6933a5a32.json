{"ast":null,"code":"var _jsxFileName = \"/Users/stephma/Documents/GitHub/webdev-labs/lab09/src/AddComment.js\";\nimport React from 'react';\nimport { getHeaders } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddComment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-comment\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"comment-textbox\",\n          \"aria-label\": \"Add a comment\",\n          placeholder: \"Add a comment...\",\n          value: this.state.value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"link\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"submitting \" + this.state.value);\n    const postId = this.props.postId;\n    const commentText = this.state.value;\n    const postData = {\n      \"post_id\": postId,\n      \"text\": commentText\n    };\n    fetch(\"/api/comments\", {\n      method: \"POST\",\n      headers: getHeaders(),\n      body: JSON.stringify(postData)\n    }).then(response => response.json()).then(data => {\n      console.log(\"postid is \" + postId + \" with text \" + commentText);\n      this.props.requeryPost();\n    });\n  }\n\n}\n\nexport default AddComment;","map":{"version":3,"sources":["/Users/stephma/Documents/GitHub/webdev-labs/lab09/src/AddComment.js"],"names":["React","getHeaders","AddComment","Component","constructor","props","state","value","handleChange","bind","handleSubmit","render","event","setState","target","preventDefault","console","log","postId","commentText","postData","fetch","method","headers","body","JSON","stringify","then","response","json","data","requeryPost"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDE,EAAAA,MAAM,GAAI;AACN,wBAAO;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAE,KAAKD,YAA7C;AAAA,8BACH;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA,+BACI;AACI,UAAA,KAAK,EAAC,iBADV;AAEI,wBAAW,eAFf;AAGI,UAAA,WAAW,EAAC,kBAHhB;AAII,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAJtB;AAKI,UAAA,QAAQ,EAAE,KAAKC;AALnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADG,eASH;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAWH;;AAEDA,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AACVN,MAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaP;AADV,KAAd;AAGH;;AAEDG,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACG,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAKX,KAAL,CAAWC,KAAvC;AACA,UAAMW,MAAM,GAAG,KAAKb,KAAL,CAAWa,MAA1B;AACA,UAAMC,WAAW,GAAG,KAAKb,KAAL,CAAWC,KAA/B;AACA,UAAMa,QAAQ,GAAG;AACb,iBAAWF,MADE;AAEb,cAAQC;AAFK,KAAjB;AAKAE,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,OAAO,EAAEtB,UAAU,EAFJ;AAGfuB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AAHS,KAAlB,CAAL,CAKKO,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUG,IAAI,IAAI;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeC,MAAf,GAAwB,aAAxB,GAAwCC,WAApD;AACA,WAAKd,KAAL,CAAW0B,WAAX;AACH,KATL;AAWH;;AAnDoC;;AAyDzC,eAAe7B,UAAf","sourcesContent":["import React from 'react';\nimport { getHeaders } from './utils';\n\nclass AddComment extends React.Component {  \n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    render () {\n        return <form className='add-comment' onSubmit={this.handleSubmit}>\n            <div class=\"input-holder\">\n                <input \n                    class=\"comment-textbox\" \n                    aria-label=\"Add a comment\" \n                    placeholder=\"Add a comment...\" \n                    value={this.state.value}\n                    onChange={this.handleChange}/>\n            </div>\n            <button class=\"link\">Post</button>\n        </form>\n    }     \n    \n    handleChange(event) {\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"submitting \" + this.state.value);\n        const postId = this.props.postId;\n        const commentText = this.state.value;\n        const postData = {\n            \"post_id\": postId,\n            \"text\": commentText\n        };\n        \n        fetch(\"/api/comments\", {\n                method: \"POST\",\n                headers: getHeaders(),\n                body: JSON.stringify(postData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"postid is \" + postId + \" with text \" + commentText);\n                this.props.requeryPost();\n            });\n        \n    }\n    \n}\n\n\n\nexport default AddComment;"]},"metadata":{},"sourceType":"module"}