{"ast":null,"code":"var _jsxFileName = \"/Users/stephma/Documents/GitHub/webdev-labs/lab09/src/Suggestion.js\";\nimport React from 'react';\nimport { getHeaders } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Suggestion extends React.Component {\n  constructor(props) {\n    super(props); // constructor logic\n\n    this.state = {\n      model: this.props.model\n    };\n    console.log('Suggestion component created');\n    console.log(this.props.model);\n    console.log(\"If there is a follow id\");\n    console.log(this.props.model.followingId);\n    this.toggleFollow = this.toggleFollow.bind(this);\n    this.followUser = this.followUser.bind(this);\n    this.unfollowUser = this.unfollowUser.bind(this);\n  }\n\n  componentDidMount() {\n    // fetch posts\n    console.log('Suggestion component mounted');\n  }\n\n  toggleFollow(ev) {\n    if (this.state.followingId) {\n      this.unfollowUser();\n    } else {\n      this.followUser();\n    }\n  }\n\n  followUser() {\n    console.log(\"id passing in \" + this.props.model.id);\n    const postData = {\n      'user_id': this.props.model.id\n    };\n    console.log(\"postdata is \" + postData.get(\"user_id\"));\n    fetch(\"/api/following/\", {\n      method: \"POST\",\n      headers: getHeaders(),\n      body: JSON.stringify(postData)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        model: data.following\n      });\n    });\n  }\n\n  unfollowUser() {\n    fetch(\"/api/following/\" + this.state.model.followingId, {\n      method: \"DELETE\",\n      headers: getHeaders()\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        model: this.props.model\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: 'suggestion-' + this.props.model.id,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.props.model.thumb_url,\n        class: \"pic\",\n        alt: \"Profile pic for\" + this.props.model.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.model.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"suggested for you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleFollow,\n          role: \"switch\",\n          className: \"link following\",\n          \"aria-checked\": \"false\",\n          \"aria-label\": \"Follow\" + this.props.model.username,\n          children: this.state.model.followingId ? \"unfollow\" : \"follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Suggestion;","map":{"version":3,"sources":["/Users/stephma/Documents/GitHub/webdev-labs/lab09/src/Suggestion.js"],"names":["React","getHeaders","Suggestion","Component","constructor","props","state","model","console","log","followingId","toggleFollow","bind","followUser","unfollowUser","componentDidMount","ev","id","postData","get","fetch","method","headers","body","JSON","stringify","then","response","json","data","setState","following","render","thumb_url","username"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { getHeaders } from './utils';\nclass Suggestion extends React.Component {  \n    constructor(props) {\n        super(props);\n        // constructor logic\n        this.state={\n            model: this.props.model\n        }\n        console.log('Suggestion component created');\n        console.log(this.props.model);\n        console.log(\"If there is a follow id\");\n        console.log(this.props.model.followingId)\n\n        this.toggleFollow = this.toggleFollow.bind(this);\n        this.followUser = this.followUser.bind(this);\n        this.unfollowUser = this.unfollowUser.bind(this);\n    }\n\n    componentDidMount() {\n        // fetch posts\n        console.log('Suggestion component mounted');\n    }\n\n    toggleFollow(ev){\n        if (this.state.followingId){\n            this.unfollowUser();\n        } else {\n            this.followUser();\n        }\n    }\n\n    followUser(){\n        console.log(\"id passing in \" + this.props.model.id)\n        const postData = {\n            'user_id': this.props.model.id\n        };\n        console.log(\"postdata is \" + postData.get(\"user_id\"));\n        \n        fetch(\"/api/following/\", {\n                method: \"POST\",\n                headers: getHeaders(),\n                body: JSON.stringify(postData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                this.setState ({\n                    model: data.following\n                })\n            });\n    }\n\n    unfollowUser(){\n        fetch(\"/api/following/\"+ this.state.model.followingId, {\n        method: \"DELETE\",\n        headers: getHeaders()\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log(data);\n        this.setState({\n            model: this.props.model\n        })\n    });\n    }\n\n    render () {\n        return (\n            <section className={'suggestion-' + this.props.model.id}>\n                <img src={this.props.model.thumb_url} \n                class=\"pic\" alt={\"Profile pic for\" + this.props.model.username }></img>\n                <div>\n                    <p>{this.props.model.username}</p>\n                    <p>suggested for you</p>\n                </div>\n                <div>\n                    <button \n                        onClick={ this.toggleFollow }\n                        role=\"switch\" \n                        className=\"link following\" \n                        aria-checked=\"false\" \n                        aria-label={\"Follow\"+ this.props.model.username}>\n                        {this.state.model.followingId ? \"unfollow\" : \"follow\"}\n                    </button>\n                </div>\n            </section>\n        )     \n    }\n}\n\nexport default Suggestion;"]},"metadata":{},"sourceType":"module"}